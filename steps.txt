Make a Image Recognition App:

1. Get a collective amount of images of animals 
    - Perhaps start with a small amount of the same animal?
    - How are we going to decide what type of animal we want the ai to use?
        - Possible Animals (Only One type of animal, so no like type of dogs or specifc breed of cats for exampme):
            - Tigers (probably easy due to its unique features? Not sure tho)
            - Gorillas
            - Zebra (probably easy due to its unique features? Not sure tho)
            - Seagulls? (May be hard due to features blending in with typical backgrounds??? Not sure however)
            - Giraffe (May be hard, can blend to surrounds?? Not sure)

2. Have the ai preprocess the image and a consistent format so that it can analyze each image on a consistent basis
    - What forma/changes are we going to have the images in?
        - Perhaps brightening each image? - (Maybe make a sort of checker so see how bright or dark a image is and do a corresponding process in order to handle it?)
        - Would we need to crop the image in a certain x by x pixel format?
    - What if the image has the animal/target has it in the top corner for example but we are preprocessing it by cropping the image to the center? Are we going to have users put an image that has a clear animal in it? How are we going to deal with scenarios where the animal isn't clear?
    
3. Train the model to identify and classify animal
    - Most likely train the bot so it recognises pixel patterns that correspond to a specific animal, and if the confidence of the output is high enough then it will try to put a guess?
        - If the confidence is not as high as a certain minimum threshold then have it tell the user that it could not identify the image
    - Train the bot with the images gathered from step 1

4. Evaluate the model on a certain critera
    - What would be the critera would be based on to measure its correctness?
        - What would be the "best" critera to measuer the effectiveness on a model like this one?
    - If a certain aspect of the evaluations end up disastisfying then "tune" the model so that it can make that specific requirement

5. Deploy model
    - Have it in a website type format where it just has one page where users can upload their image.
        - What framework should we use?
            - Perhaps react for the front-end?
            - Node js express for the back end? ( Not sure do not have that much experience)
            - Django for the backend? (Have more experience with, but not sure how I will be able to connect it to the react front-end) 
            - Can use pure html combinded with Django, have done that and have experience, and I think that this should be the option going forward since it does use python
                - However the views in the Django project would post likely need to be broken up into smaller pieces. 
                - Not sure how to deploy a Django web application. ( need more experience, however more confient when it is in its development stage) 
        - Whatever back-end I choose it needs to be one that can handle image uploads
            - What are other things that can arise from using a certain framework?
                - Using node js express as the back-end can have its benefits, however the main problem is that I am not as proficent with Javascript
                - React is good for me, not much javascript is needed as a simple one page front-end framework. Just got to make sure that if I use Django that it can connect to it
    - Deploy then website into a docker container 




ANSWERS:
1. What is going to be the ai framework for our image recongization app?
    - It needs to be proficent in handling images, and have the neccessary tools that are easy to understand that identify certian pixel patterns with images
    - Needs to handle large datasets of images
    - Is able to give its response in a string format
    - Has the capablities of logging its process of choosing its response
    - Has debugging technology so that if an error occurs theres debugging
    - Has a community behind it on forums 
    - Has extensive, detaiiled, easy to understand and "good documentation"

1A - Tensorflow
